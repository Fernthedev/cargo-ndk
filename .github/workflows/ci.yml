on: [push, pull_request]

name: CI

jobs:
  ci:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        rust:
          - stable
          - beta
          - nightly
          - 1.73.0 # MSRV
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install MSYS (Windows only)
        if: runner.os == 'Windows'
        uses: msys2/setup-msys2@v2
        with:
          msystem: UCRT64
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          targets: aarch64-linux-android, armv7-linux-androideabi
          components: rustfmt, clippy
      - name: Run build
        run: cargo install --locked --path .
      - name: Smoke test `ndk-env`
        run: cargo ndk-env
      - name: Run basic example
        working-directory: example/basic
        run: cargo ndk -o jniLibs build -vv
      - name: Run openssl example (Windows)
        if: runner.os == 'Windows'
        shell: 'msys2 {0}'
        working-directory: example/openssl
        run: cargo ndk --platform 28 build -vv
      - name: Run openssl example (Unix)
        if: runner.os != 'Windows'
        working-directory: example/openssl
        run: cargo ndk --platform 28 build -vv
      - name: Check code formatting
        continue-on-error: true
        run: cargo fmt --all -- --check
      - name: Run clippy
        continue-on-error: true
        run: cargo clippy -- -D warnings
